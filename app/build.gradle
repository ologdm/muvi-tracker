plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // parcelize
    id 'kotlin-parcelize'

    id("kotlin-kapt")

    // hilt dagger
    id("com.google.dagger.hilt.android")
}


android {
    namespace 'com.example.muvitracker'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.muvitracker"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }


    buildFeatures {
        viewBinding true
    }

}


dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // other library
    testImplementation("androidx.arch.core:core-testing:2.2.0")

    // kotlin serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.0-RC'

    // parcelize
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.0"

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.10.0'
    // TODO eliminare gson di java
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.9.0'
    // retrofit con koltin serialization
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0'

    // swipe refresh
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // kotlin viewmodels
    implementation "androidx.fragment:fragment-ktx:1.7.1"

    // glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // hilt dagger
    implementation("com.google.dagger:hilt-android:2.51.1")
    kapt("com.google.dagger:hilt-compiler:2.51.1")

    // coroutines: base + android
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1")

    // store library
    implementation "org.mobilenativefoundation.store:store4:4.0.7"


    // db with room ################################################
    implementation "androidx.room:room-ktx:2.6.1"
    annotationProcessor "androidx.room:room-compiler:2.6.1"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:2.6.1"
    // To use Kotlin Symbol Processing (KSP) TODO test
//    ksp "androidx.room:room-compiler:2.6.1"

    // optional - Paging 3 Integration TODO
//    implementation "androidx.room:room-paging:$room_version"

    // optional - Test helpers TODO
//    testImplementation "androidx.room:room-testing:$room_version"










}


kapt {
    correctErrorTypes true
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.9"
    }
}